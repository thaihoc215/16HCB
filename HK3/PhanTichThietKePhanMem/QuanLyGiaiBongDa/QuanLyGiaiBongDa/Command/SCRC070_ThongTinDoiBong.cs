//------------------------------------------------------------------------------
// <auto-generated>
//     text template column for binding
//
//     Auto refresh
// </auto-generated>
//------------------------------------------------------------------------------

using System.Windows.Input;
using Microsoft.TeamFoundation.MVVM;
using QuanLyGiaiBongDa.Common;
using QuanLyGiaiBongDa.ViewModels;
namespace QuanLyGiaiBongDa.ViewModels
{

	partial class SCRC070VM_ThongTinDoiBong : BaseViewModel
	{

		private ICommand _openEditCommand;

		public ICommand OpenEditCommand
		{
			get
			{
				if (_openEditCommand == null)
				{
					_openEditCommand = new RelayCommand(ExecuteOpenEditCommand);
				}
				return _openEditCommand;
			}
		}

		private ICommand _saveEditCommand;

		public ICommand SaveEditCommand
		{
			get
			{
				if (_saveEditCommand == null)
				{
					_saveEditCommand = 
						new RelayCommand(ExecuteSaveEditCommand, CanExecuteSaveEditCommand);
				}
				return _saveEditCommand;
			}
		}

		private ICommand _closeCommand;

		public ICommand CloseCommand
		{
			get
			{
				if (_closeCommand == null)
				{
					_closeCommand = new RelayCommand(ExecuteCloseCommand);
				}
				return _closeCommand;
			}
		}

		private ICommand _openSVDCommand;

		public ICommand OpenSVDCommand
		{
			get
			{
				if (_openSVDCommand == null)
				{
					_openSVDCommand = 
						new RelayCommand(ExecuteOpenSVDCommand, CanExecuteOpenSVDCommand);
				}
				return _openSVDCommand;
			}
		}

		private ICommand _openHLVCommand;

		public ICommand OpenHLVCommand
		{
			get
			{
				if (_openHLVCommand == null)
				{
					_openHLVCommand = 
						new RelayCommand(ExecuteOpenHLVCommand, CanExecuteOpenHLVCommand);
				}
				return _openHLVCommand;
			}
		}

		private ICommand _openDSCTCommand;

		public ICommand OpenDSCTCommand
		{
			get
			{
				if (_openDSCTCommand == null)
				{
					_openDSCTCommand = new RelayCommand(ExecuteOpenDSCTCommand);
				}
				return _openDSCTCommand;
			}
		}

		private ICommand _chooseLogoCommand;

		public ICommand ChooseLogoCommand
		{
			get
			{
				if (_chooseLogoCommand == null)
				{
					_chooseLogoCommand = 
						new RelayCommand(ExecuteChooseLogoCommand, CanExecuteChooseLogoCommand);
				}
				return _chooseLogoCommand;
			}
		}

	}
}



